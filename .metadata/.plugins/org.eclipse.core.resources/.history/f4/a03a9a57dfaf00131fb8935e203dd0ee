package list;

import java.util.LinkedList;

/**
 * 
 * @author anderson
 * 
 * @param <T>
 *            Any Comparable type
 * 
 *            A linked list whose elements are kept in sorted order.
 */
public class SortedLinkedList<T extends Comparable<T>> extends
		DoublyLinkedList<T> {
	
	public DoublyLinkedList<T> list;
	public Node head;
	public Node tail;
	/**
	 * Create an empty list
	 * 
	 */
	public SortedLinkedList() {
		super();
		this.list = new DoublyLinkedList();
	}

	/**
	 * Creates a sorted list containing the same elements as the parameter
	 * 
	 * @param list
	 *            the input list
	 */
	public SortedLinkedList(DoublyLinkedList<T> list) {
		super();
		this.list = list;

	}

	/**
	 * Adds the given element to the list, keeping it sorted.
	 */
	@Override
	public void add(T element) {
		this.list.add(element);
		// TODO: implement this method
	}

	@Override
	public void addFirst(T element) {
		// TODO: throw UnsupportedOperationException exception
	}

	@Override
	public void addLast(T element) {
		if(!element.getClass().equals(list.head.getClass())){
			throw new UnsupportedOperationException();
		}
		// TODO: throw UnsupportedOperationException exception
	}
	
	
	
}
